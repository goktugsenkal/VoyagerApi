name: Voyager .NET CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --no-build --verbosity normal
      
    - name: Install Swagger CLI
      run: dotnet tool install --global Swashbuckle.AspNetCore.Cli

    - name: Generate swagger.json
      run: |
          swagger tofile \
            --output swagger.json \
            --openapiversion 3.0 \
            Api/bin/Release/net9.0/Api.dll v1
    
    - name: Patch OpenAPI version to 3.0.1
      run: |
          sed -i 's/"openapi": "3.0.4"/"openapi": "3.0.1"/' swagger.json

    - name: Upload swagger.json as artifact
      uses: actions/upload-artifact@v4
      with:
        name: swagger-json
        path: swagger.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        ssh -o StrictHostKeyChecking=no ec2-user@ec2-13-48-203-98.eu-north-1.compute.amazonaws.com "
          set -e

          echo '✅ SSH connection successful'

          export PATH=\$PATH:\$HOME/.dotnet/tools

          cd /home/ec2-user/repos/VoyagerApi

          echo 'Pulling master branch...'
          git fetch origin
          git reset --hard origin/master

          CONFIG_DIR=/home/ec2-user/voyager-configs
          TMP_CONFIG_DIR=/tmp/voyager-config-backup
          mkdir -p \$TMP_CONFIG_DIR

          echo 'Backing up production.json...'
          if [ ! -f \$CONFIG_DIR/production.json ]; then echo '❌ production.json missing'; exit 1; fi

          cp \$CONFIG_DIR/production.json \$TMP_CONFIG_DIR/production.json

          export DOTNET_GCHeapHardLimit=773741824

          echo 'Publishing MASTER build...'
          dotnet publish Api/Api.csproj -c Release -p:PublishReadyToRun=false -o /var/www/voyager

          echo 'Restoring MASTER configs...'
          cp \$TMP_CONFIG_DIR/production.json /var/www/voyager/appsettings.json
          cp \$TMP_CONFIG_DIR/production.json Api/appsettings.json

          echo 'Running database migrations for MASTER...'
          ASPNETCORE_ENVIRONMENT=Production dotnet ef database update -s Api/ -p Infrastructure/ --no-build

          echo 'Restarting MASTER service...'
          sudo systemctl restart voyager.service
        "
